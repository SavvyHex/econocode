// Simple arithmetic grammar
use crate::ast::Expr;

grammar;

pub Expr: Expr = {
    <l:Expr> "+" <r:Term> => Expr::Add(Box::new(l), Box::new(r)),
    <l:Expr> "-" <r:Term> => Expr::Sub(Box::new(l), Box::new(r)),
    Term,
};

Term: Expr = {
    <l:Term> "*" <r:Factor> => Expr::Mul(Box::new(l), Box::new(r)),
    <l:Term> "/" <r:Factor> => Expr::Div(Box::new(l), Box::new(r)),
    Factor,
};

Factor: Expr = {
    <n:INT> => Expr::Int(n),
    <id:IDENT> => Expr::Var(id),
    "(" <e:Expr> ")" => e,
};

terminal INT: i64 = "[0-9]+" => |tok| tok.parse().unwrap();
terminal IDENT: String = "[a-zA-Z_][a-zA-Z0-9_]*" => |tok| tok.to_string();
